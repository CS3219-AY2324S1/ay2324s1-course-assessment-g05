import { ZodError, ZodIssue } from "zod";

enum Language {
  CPP = "CPP",
  PYTHON = "Python",
  JAVA = "Java",
  JAVASCRIPT = "JavaScript",
  CSHARP = "CSharp",
  TYPESCRIPT = "TypeScript",
  RUBY = "Ruby",
  GO = "Go",
}

export const convertStringToLanguage = (language: string): Language => {
  // code generated by GitHub CoPilot
  switch (language) {
    case "CPP":
      return Language.CPP;
    case "Python":
      return Language.PYTHON;
    case "Java":
      return Language.JAVA;
    case "JavaScript":
      return Language.JAVASCRIPT;
    case "CSharp":
      return Language.CSHARP;
    case "TypeScript":
      return Language.TYPESCRIPT;
    case "Ruby":
      return Language.RUBY;
    case "Go":
      return Language.GO;
    default:
      throw new ZodError([{ message: "Invalid language" } as ZodIssue]);
  }
};

export default Language;
