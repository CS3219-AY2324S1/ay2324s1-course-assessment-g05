// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "questions", "history"]
}

model User {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  password   String
  role       String
  isVerified Boolean @default(false)

  verificationToken  String?
  passwordResetToken String?

  image  String?
  bio    String?
  gender String?

  createdOn   DateTime     @default(now())
  updatedOn   DateTime     @updatedAt
  preferences Preferences?

  History History[]

  @@map("User")
  @@schema("public")
}

model Preferences {
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  languages    String[]
  difficulties String[]
  topics       String[]

  @@id([userId])
  @@map("Preferences")
  @@schema("public")
}

model Question {
  id          String   @id @default(cuid())
  title       String   @unique
  description String
  topics      String[]
  complexity  String
  url         String
  author      String   @default("LeetCode")

  examples    Example[]
  constraints String[]

  createdOn DateTime  @default(now())
  updatedOn DateTime  @updatedAt
  History   History[]

  @@map("Question")
  @@schema("questions")
}

model Example {
  id         String   @id @default(cuid())
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  input       String
  output      String
  explanation String?

  @@map("Example")
  @@schema("questions")
}

model History {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  title      String
  topics     String[]
  complexity String
  language   String

  code String?

  @@unique([userId, questionId])
  @@schema("history")
}
